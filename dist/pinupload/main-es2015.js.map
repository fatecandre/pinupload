{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/boards/boards.component.html","./src/app/home/home.component.html","./src/app/login/login.component.html","./src/app/o-auth2-callback/o-auth2-callback.component.html","./src/app/ui/header/header.component.html","./src/app/ui/main-menu/main-menu.component.html","./src/app/user/user.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/boards/boards.component.scss","./src/app/boards/boards.component.ts","./src/app/home/home.component.scss","./src/app/home/home.component.ts","./src/app/login/login.component.scss","./src/app/login/login.component.ts","./src/app/material/material.module.ts","./src/app/o-auth2-callback/o-auth2-callback.component.scss","./src/app/o-auth2-callback/o-auth2-callback.component.ts","./src/app/services/pinterest.service.ts","./src/app/ui/header/header.component.scss","./src/app/ui/header/header.component.ts","./src/app/ui/main-menu/main-menu.component.scss","./src/app/ui/main-menu/main-menu.component.ts","./src/app/user/user.component.scss","./src/app/user/user.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<h1>Pastas</h1>\\r\\n\\r\\n<mat-accordion *ngIf=\\\"boards.length > 0\\\">\\r\\n   <mat-expansion-panel *ngFor=\\\"let board of boards\\\" (opened)=\\\"fetchPins(board.name)\\\">\\r\\n      <mat-expansion-panel-header>\\r\\n\\r\\n         <mat-panel-title>\\r\\n            {{ board.name }}\\r\\n         </mat-panel-title>\\r\\n\\r\\n      </mat-expansion-panel-header>\\r\\n\\r\\n      <mat-card *ngFor=\\\"let pin of boardPins[board.name]\\\" class=\\\"pin-preview\\\">\\r\\n         <img mat-card-image [src]=\\\"pin.image.original.url\\\" [alt]=\\\"pin.note\\\">\\r\\n         <mat-card-content>\\r\\n           <p>\\r\\n             {{ pin.note }}\\r\\n           </p>\\r\\n         </mat-card-content>         \\r\\n       </mat-card>\\r\\n\\r\\n   </mat-expansion-panel>\\r\\n</mat-accordion>\\r\\n\\r\\n<p *ngIf=\\\"boards.length <= 0\\\">Você não criou nenhuma pasta ainda.</p>\"","module.exports = \"<p>home works!</p>\\r\\n\"","module.exports = \"<div>\\r\\n   <button mat-button color=\\\"primary\\\" (click)=\\\"doLogin()\\\">\\r\\n      Fazer login no Pinterest\\r\\n   </button>\\r\\n</div>\"","module.exports = \"<p>o-auth2-callback works!</p>\\r\\n\"","module.exports = \"<mat-toolbar color=\\\"primary\\\" class=\\\"mat-elevation-z8\\\">\\r\\n   <mat-toolbar-row>\\r\\n      <app-main-menu></app-main-menu>\\r\\n      <span>{{ appName }}</span>\\r\\n   </mat-toolbar-row>\\r\\n</mat-toolbar>\"","module.exports = \"<button mat-button [matMenuTriggerFor]=\\\"menu\\\" #state=\\\"matMenuTrigger\\\">\\r\\n   <mat-icon *ngIf=\\\"! state.menuOpen\\\">menu</mat-icon>\\r\\n   <mat-icon *ngIf=\\\"state.menuOpen\\\">close</mat-icon>\\r\\n</button>\\r\\n<mat-menu #menu=\\\"matMenu\\\">\\r\\n   <a *ngIf=\\\"hasUser()\\\" mat-menu-item [routerLink]=\\\"['/user']\\\">Perfil</a>\\r\\n   <a *ngIf=\\\"hasUser()\\\" mat-menu-item [routerLink]=\\\"['/boards']\\\">Pastas</a>\\r\\n   <a *ngIf=\\\"! hasUser()\\\" mat-menu-item [routerLink]=\\\"['/login']\\\">Entrar</a>\\r\\n   <button *ngIf=\\\"hasUser()\\\" mat-menu-item (click)=\\\"logOff()\\\">Sair</button>   \\r\\n</mat-menu>\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <mat-card class=\\\"example-card\\\">\\r\\n    <mat-card-header>\\r\\n      <div mat-card-avatar>\\r\\n        <img mat-card-image [src]=\\\"avatarImage\\\" [alt]=\\\"avatarAlt\\\">\\r\\n      </div>\\r\\n      <mat-card-title>{{ user.username }}</mat-card-title>\\r\\n      <mat-card-subtitle>{{ user.first_name }} {{ user.last_name }}</mat-card-subtitle>\\r\\n    </mat-card-header>\\r\\n    <mat-card-content>\\r\\n      <p>{{ user.bio }}</p>\\r\\n    </mat-card-content>\\r\\n    <mat-card-actions>\\r\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"doLogoff()\\\">Sair</button>\\r\\n    </mat-card-actions>\\r\\n  </mat-card>\\r\\n</div>\\r\\n\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { OAuth2CallbackComponent } from './o-auth2-callback/o-auth2-callback.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport { BoardsComponent } from './boards/boards.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: LoginComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'user', component: UserComponent },\r\n  { path: 'boards', component: BoardsComponent },\r\n  { path: 'oauth2/callback', component: OAuth2CallbackComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  template: `\r\n    <app-header [appName]=\"title\"></app-header>\r\n    <router-outlet></router-outlet>\r\n  `,\r\n  styles: []\r\n})\r\nexport class AppComponent {\r\n  title = 'Pinupload';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { HttpClientJsonpModule } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from './material/material.module';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { OAuth2CallbackComponent } from './o-auth2-callback/o-auth2-callback.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport { HeaderComponent } from './ui/header/header.component';\r\nimport { MainMenuComponent } from './ui/main-menu/main-menu.component';\r\nimport { BoardsComponent } from './boards/boards.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    OAuth2CallbackComponent,\r\n    HomeComponent,\r\n    UserComponent,\r\n    HeaderComponent,\r\n    MainMenuComponent,\r\n    BoardsComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    HttpClientJsonpModule,    \r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2JvYXJkcy9ib2FyZHMuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { PinterestService } from '../services/pinterest.service';\r\n\r\n@Component({\r\n  selector: 'app-boards',\r\n  templateUrl: './boards.component.html',\r\n  styleUrls: ['./boards.component.scss']\r\n})\r\nexport class BoardsComponent implements OnInit {\r\n\r\n  constructor(private pinterest: PinterestService) { }\r\n\r\n  boards: any = [];\r\n  boardPins: any = {};\r\n\r\n  async ngOnInit() {\r\n    try {\r\n      let result = await this.pinterest.listBoards();\r\n      this.boards = result['data'];\r\n      console.log(this.boards);\r\n    }\r\n    catch(error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n\r\n  async fetchPins(boardName: string) {\r\n    console.log(this.boardPins[boardName]);\r\n    // Se ainda não houver carregado a lista de imagens do board\r\n    if(! this.boardPins[boardName]) {\r\n      try {\r\n        let result = await this.pinterest.listBoardPins(boardName);\r\n        this.boardPins[boardName] = result['data'];\r\n        console.log(result);\r\n      }\r\n      catch(error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"div {\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2FuZHJlL0Rldi9waW51cGxvYWQvc3JjL2FwcC9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRyxrQkFBQTtBQ0NIIiwiZmlsZSI6InNyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJkaXYge1xyXG4gICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn0iLCJkaXYge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { PinterestService } from '../services/pinterest.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  constructor(\r\n    private pinterest: PinterestService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    // Já tem usuário logado, não precisa fazer login\r\n    if(this.pinterest.getUser()) {\r\n      this.router.navigate(['user']);\r\n    }    \r\n  }\r\n\r\n  doLogin() {\r\n    this.pinterest.initLogin();    \r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { CdkTreeModule } from '@angular/cdk/tree';\r\nimport {\r\n  MatAutocompleteModule,\r\n  MatBadgeModule,\r\n  MatBottomSheetModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatDatepickerModule,\r\n  MatDialogModule,\r\n  MatDividerModule,\r\n  MatExpansionModule,\r\n  MatGridListModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatNativeDateModule,\r\n  MatPaginatorModule,\r\n  MatProgressBarModule,\r\n  MatProgressSpinnerModule,\r\n  MatRadioModule,\r\n  MatRippleModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatStepperModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatTooltipModule,\r\n  MatTreeModule,\r\n} from '@angular/material';\r\n@NgModule({\r\n  exports: [\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n  ]\r\n})\r\nexport class MaterialModule { }","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL28tYXV0aDItY2FsbGJhY2svby1hdXRoMi1jYWxsYmFjay5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { PinterestService } from '../services/pinterest.service';\r\n\r\n@Component({\r\n  selector: 'app-o-auth2-callback',\r\n  templateUrl: './o-auth2-callback.component.html',\r\n  styleUrls: ['./o-auth2-callback.component.scss']\r\n})\r\nexport class OAuth2CallbackComponent implements OnInit {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private pinterest: PinterestService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.route.queryParams.subscribe(\r\n      params => {\r\n        if(params.code) { // Se existir o parâmetro chamado 'code'\r\n          console.log('Access code:');\r\n          console.log(params.code);\r\n          // Salva o access code para uso posterior\r\n          this.pinterest.setAccessCode(params.code);\r\n          // Retorna à página inicial\r\n          //this.router.navigate(['/']); \r\n        }\r\n        else {\r\n          console.error('ERRO DE ACCESS CODE');\r\n          // Deu erro no login; retornamos à página de login\r\n          // this.router.navigate(['/login']);          \r\n        }\r\n      }\r\n    ); \r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PinterestService {\r\n\r\n  private env = environment;\r\n  \r\n  private reqHeaders : HttpHeaders;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private router: Router\r\n  ) { \r\n    this.reqHeaders = new HttpHeaders()\r\n      .set('Content-Type', 'application/json')\r\n      .set('Access-Control-Allow-Origin', 'https://' + window.location.hostname)\r\n      .set('Access-Control-Allow-Credentials', 'true')\r\n      .set('Access-Control-Allow-Methods', 'GET, POST, PATCH, DELETE, PUT, OPTIONS')\r\n      //.set('Access-Control-Request-Headers', 'Authorization, X-PING')\r\n      .set('Access-Control-Allow-Headers', 'Content-Type, Authorization, Access-Control-Allow-Headers, X-Requested-With, X-PING');\r\n  }\r\n\r\n  /* accessCode e accessToken podem ser string ou null */\r\n  private accessCode: string|null = null;\r\n  //private accessToken : string|null = null;\r\n\r\n  //private loggedInUser : any = null;\r\n\r\n  initLogin() {\r\n\r\n    // Só inicia o login caso não existam o access code e o acess token\r\n    if(this.accessCode && sessionStorage.getItem('accessToken')) {\r\n      this.router.navigate(['/']); // Volta para a página inicial\r\n      return;\r\n    }\r\n\r\n    const params = new HttpParams()\r\n      .set('response_type', 'code')\r\n      .set('client_id', this.env.clientId)\r\n      .set('scope', 'read_public,write_public')\r\n      .set('redirect_uri', this.env.redirectUri);\r\n\r\n    // Redireciona para o site do Pinterest para fazer login\r\n    window.location.href = this.env.authUrl + '?' + params.toString();\r\n\r\n  }\r\n\r\n  setAccessCode(accessCode: string) {\r\n    this.accessCode = accessCode;\r\n    this.getAccessToken();    \r\n  }\r\n\r\n  getLoggedInUser() {\r\n\r\n    // Somente procede à chamada de API se existir um access token\r\n    if(! sessionStorage.getItem('accessToken')) {\r\n      this.logOff(); // Log off forçado;\r\n      return;\r\n    }\r\n\r\n    const endPoint = 'me/';\r\n    const params = new HttpParams()\r\n      .set('access_token', sessionStorage.getItem('accessToken'))\r\n      .set('fields', 'id,username,first_name,last_name,bio,image');\r\n\r\n    this.http.get(this.env.apiUri + endPoint, {params: params}).subscribe (\r\n      user => {\r\n        // JSON.stringify(): converte JSON para string\r\n        sessionStorage.setItem('user', JSON.stringify(user['data']));\r\n        console.log(user);\r\n        this.router.navigate(['user']);\r\n      },\r\n      error => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  getUser() {\r\n    let user = sessionStorage.getItem('user');\r\n    if(user) {\r\n      // JSON.parse(): converte string em JSON\r\n      return JSON.parse(user);\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private getAccessToken() {\r\n    const params = new HttpParams()\r\n      .set('grant_type', 'authorization_code')\r\n      .set('client_id', this.env.clientId)\r\n      .set('client_secret', this.env.clientSecret)\r\n      .set('code', this.accessCode);\r\n\r\n      this.http.post(this.env.tokenUri, null, {params: params}).subscribe(\r\n        res => {\r\n          console.log('--TOKEN--');\r\n          sessionStorage.setItem('accessToken', res['access_token']);\r\n          console.log(sessionStorage.getItem('accessToken'));\r\n          this.getLoggedInUser();\r\n          //this.router.navigate(['/']);\r\n        },\r\n        error => {\r\n          console.error('ERRO DE TOKEN');\r\n          console.error(error);\r\n          //this.router.navigate(['/login']);\r\n        }\r\n      );\r\n    \r\n  }\r\n  \r\n  logOff() {\r\n    this.accessCode = null;\r\n    sessionStorage.removeItem('accessToken');\r\n    sessionStorage.removeItem('user');\r\n    this.router.navigate(['login']);\r\n  }\r\n\r\n  listBoards() {\r\n\r\n    // Somente procede à chamada de API se existir um access token\r\n    if(! sessionStorage.getItem('accessToken')) {\r\n      this.logOff(); // Log off forçado;\r\n      return;\r\n    }\r\n\r\n    const endPoint = 'me/boards';\r\n    const params = new HttpParams()\r\n      .set('access_token', sessionStorage.getItem('accessToken'))\r\n      .set('scope', 'read_public');\r\n    \r\n    let fullUri = this.env.apiUri + endPoint + '?' + params.toString();\r\n\r\n    return this.http.jsonp(fullUri, 'callback').toPromise();\r\n\r\n  }\r\n\r\n  listBoardPins(boardName: string) {\r\n\r\n    // Somente procede à chamada de API se existir um access token\r\n    if(! sessionStorage.getItem('accessToken')) {\r\n      this.logOff(); // Log off forçado;\r\n      return;\r\n    }\r\n\r\n    const endPoint = `boards/${this.getUser()['username']}/${boardName}/pins`;\r\n    const params = new HttpParams()\r\n      .set('access_token', sessionStorage.getItem('accessToken'))\r\n      .set('fields', 'id,url,note,image')\r\n      .set('scope', 'read_public');\r\n\r\n    let fullUri = this.env.apiUri + endPoint + '?' + params.toString();\r\n\r\n    console.log(fullUri);\r\n\r\n    return this.http.jsonp(fullUri, 'callback').toPromise();\r\n\r\n  }\r\n\r\n  public isLoggedIn() {\r\n    return sessionStorage.getItem('accessToken') != null;\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL2hlYWRlci9oZWFkZXIuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  @Input() appName : string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VpL21haW4tbWVudS9tYWluLW1lbnUuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { PinterestService } from '../../services/pinterest.service';\r\n\r\n@Component({\r\n  selector: 'app-main-menu',\r\n  templateUrl: './main-menu.component.html',\r\n  styleUrls: ['./main-menu.component.scss']\r\n})\r\nexport class MainMenuComponent implements OnInit {\r\n\r\n  constructor(\r\n    private pinterest: PinterestService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  logOff() {\r\n    this.pinterest.logOff();\r\n  }\r\n\r\n  hasUser() {\r\n    return this.pinterest.getUser();\r\n  }\r\n\r\n}\r\n","module.exports = \".mat-card-image {\\n  height: 60px;\\n  width: 60px;\\n  border-radius: 50%;\\n}\\n\\n.example-card {\\n  max-width: 400px;\\n  margin: 0 auto;\\n}\\n\\n.example-header-image {\\n  background-size: cover;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2FuZHJlL0Rldi9waW51cGxvYWQvc3JjL2FwcC91c2VyL3VzZXIuY29tcG9uZW50LnNjc3MiLCJzcmMvYXBwL3VzZXIvdXNlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQUE7RUFDQSxXQUFBO0VBQ0Esa0JBQUE7QUNDRjs7QURFQTtFQUNFLGdCQUFBO0VBQ0EsY0FBQTtBQ0NGOztBREVBO0VBQ0Usc0JBQUE7QUNDRiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdXNlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtY2FyZC1pbWFnZSB7XHJcbiAgaGVpZ2h0OiA2MHB4O1xyXG4gIHdpZHRoOiA2MHB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcclxufVxyXG5cclxuLmV4YW1wbGUtY2FyZCB7XHJcbiAgbWF4LXdpZHRoOiA0MDBweDtcclxuICBtYXJnaW46IDAgYXV0bztcclxufVxyXG4gXHJcbi5leGFtcGxlLWhlYWRlci1pbWFnZSB7XHJcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxufSIsIi5tYXQtY2FyZC1pbWFnZSB7XG4gIGhlaWdodDogNjBweDtcbiAgd2lkdGg6IDYwcHg7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbn1cblxuLmV4YW1wbGUtY2FyZCB7XG4gIG1heC13aWR0aDogNDAwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG4uZXhhbXBsZS1oZWFkZXItaW1hZ2Uge1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { PinterestService } from '../services/pinterest.service';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.scss']\r\n})\r\nexport class UserComponent implements OnInit {\r\n\r\n  user : any;\r\n  avatarImage: string = '';\r\n  avatarAlt: string = '';\r\n\r\n  constructor(\r\n    private pinterest: PinterestService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    // Busca os dados dos usuário no service\r\n    this.user = this.pinterest.getUser();\r\n\r\n    // Se existir a imagem 60x60\r\n    if (this.user.image['60x60']) {\r\n      this.avatarImage = this.user.image['60x60'].url;\r\n      this.avatarAlt = `Foto de ${this.user.first_name} ${this.user.last_name}`;\r\n    }\r\n  }\r\n\r\n  doLogoff() {\r\n    this.pinterest.logOff();\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  authUrl: 'https://api.pinterest.com/oauth/',\n  redirectUri: 'https://fatecandre.github.io/pinupload/oauth2/callback',\n  clientId: '5049983015757855021',\n  tokenUri:'https://api.pinterest.com/v1/oauth/token',\n  apiUri:'https://api.pinterest.com/v1/',\n  clientSecret:'11980c59c477800758bcfd4bf58eeacac07b5bf8a6a185e28728ab7f7995a64a'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}